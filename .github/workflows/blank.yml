name: Build Kivy APK

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build with custom Docker image
        run: |
          # Crear un Dockerfile temporal con todo lo necesario
          cat > Dockerfile << 'EOL'
          FROM ubuntu:22.04
          
          # Instalar todas las dependencias
          RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
              git zip unzip python3-pip autoconf libtool pkg-config \
              zlib1g-dev libncurses5-dev libncursesw5-dev libffi-dev \
              libssl-dev cython3 openjdk-17-jdk curl
          
          # Instalar Android SDK
          RUN mkdir -p /android-sdk && cd /android-sdk && \
              curl -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip && \
              unzip cmdline-tools.zip && rm cmdline-tools.zip && \
              mv cmdline-tools latest && mkdir -p cmdline-tools && mv latest cmdline-tools/
          
          # Configurar entorno
          ENV ANDROID_SDK_ROOT=/android-sdk
          ENV ANDROID_NDK_HOME=/android-sdk/ndk/25.2.9519653
          ENV PATH="$PATH:/android-sdk/cmdline-tools/latest/bin:/android-sdk/platform-tools:/android-sdk/build-tools/33.0.0"
          
          # Aceptar licencias AUTOMÁTICAMENTE (solución definitiva)
          RUN mkdir -p /root/.android
          RUN touch /root/.android/repositories.cfg
          RUN echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > /root/.android/androidtool.cert
          RUN echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> /root/.android/androidtool.cert
          RUN echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> /root/.android/androidtool.cert
          
          # Instalar componentes Android (esto aceptará licencias automáticamente)
          RUN /android-sdk/cmdline-tools/latest/bin/sdkmanager --install "platform-tools" "build-tools;33.0.0" "platforms;android-33" "ndk;25.2.9519653" --sdk_root=/android-sdk
          
          # Verificar instalación
          RUN ls -la /android-sdk/build-tools/33.0.0/aidl && chmod +x /android-sdk/build-tools/33.0.0/aidl
          
          # Instalar Buildozer
          RUN pip install buildozer cython
          
          WORKDIR /app
          EOL

          # Construir la imagen Docker
          docker build -t kivy-builder .
          
          # Ejecutar Buildozer
          docker run --rm -v $(pwd):/app \
            -e FIREBASE_PRIVATE_KEY_ID="$FIREBASE_PRIVATE_KEY_ID" \
            -e FIREBASE_PRIVATE_KEY="$FIREBASE_PRIVATE_KEY" \
            -e FIREBASE_CLIENT_EMAIL="$FIREBASE_CLIENT_EMAIL" \
            -e FIREBASE_CLIENT_ID="$FIREBASE_CLIENT_ID" \
            kivy-builder buildozer -v android debug
        env:
          FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: kivy-apk
          path: bin/*.apk

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-failure-logs
          path: |
            .buildozer
            **/*.log
