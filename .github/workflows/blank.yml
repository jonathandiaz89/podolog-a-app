name: Build Kivy APK

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev libltdl-dev cython3

      - name: Install Android SDK and NDK
        run: |
          # Descargar Android Command Line Tools
          mkdir -p ~/android-sdk
          cd ~/android-sdk
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-9477386_latest.zip
          mv cmdline-tools latest
          mkdir -p cmdline-tools
          mv latest cmdline-tools/
          
          # Configurar variables de entorno
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$HOME/android-sdk/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "PATH=$PATH:$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools" >> $GITHUB_ENV
          
          # Aceptar licencias
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null 2>&1
          
          # Instalar componentes Android
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0" "ndk;25.2.9519653"
          
          # Verificar que Aidl estÃ¡ instalado
          echo "=== VERIFICANDO AIDL ==="
          find $HOME/android-sdk -name "aidl" -type f
          $HOME/android-sdk/build-tools/33.0.0/aidl --version || echo "Aidl no ejecutable"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Python dependencies
        run: |
          pip install buildozer cython

      - name: Create symbolic links for Android tools
        run: |
          # Crear enlaces simbÃ³licos para que Buildozer encuentre las herramientas
          sudo ln -sf $HOME/android-sdk/build-tools/33.0.0/aidl /usr/local/bin/aidl || true
          sudo ln -sf $HOME/android-sdk/build-tools/33.0.0/aapt /usr/local/bin/aapt || true
          sudo ln -sf $HOME/android-sdk/build-tools/33.0.0/zipalign /usr/local/bin/zipalign || true
          sudo ln -sf $HOME/android-sdk/build-tools/33.0.0/d8 /usr/local/bin/d8 || true
          
          # Verificar enlaces
          echo "=== ENLACES CREADOS ==="
          ls -la /usr/local/bin/aidl || echo "No se pudo crear enlace para aidl"
          which aidl || echo "Aidl no encontrado en PATH"

      - name: Create buildozer.spec from template
        run: |
          if [ ! -f buildozer.spec.template ]; then
            echo "ðŸ“‹ Creando buildozer.spec.template..."
            
            echo "[app]" > buildozer.spec.template
            echo "title = PodologiaApp" >> buildozer.spec.template
            echo "package.name = podologiaapp" >> buildozer.spec.template
            echo "package.domain = org.podologia" >> buildozer.spec.template
            echo "version = 0.1" >> buildozer.spec.template
            echo "requirements = python3,kivy==2.0.0,kivymd==0.104.2,firebase-admin==6.0.0,python-dateutil,unidecode==1.3.6,pyjnius,cython" >> buildozer.spec.template
            echo "android.permissions = INTERNET,CAMERA,READ_EXTERNAL_STORAGE,WRITE_EXTERNAL_STORAGE" >> buildozer.spec.template
            echo "android.envvars = " >> buildozer.spec.template
            echo "    FIREBASE_TYPE=service_account" >> buildozer.spec.template
            echo "    FIREBASE_PROJECT_ID=podologia-app" >> buildozer.spec.template
            echo "    FIREBASE_PRIVATE_KEY_ID=__FIREBASE_PRIVATE_KEY_ID__" >> buildozer.spec.template
            echo "    FIREBASE_PRIVATE_KEY=__FIREBASE_PRIVATE_KEY__" >> buildozer.spec.template
            echo "    FIREBASE_CLIENT_EMAIL=__FIREBASE_CLIENT_EMAIL__" >> buildozer.spec.template
            echo "    FIREBASE_CLIENT_ID=__FIREBASE_CLIENT_ID__" >> buildozer.spec.template
            echo "    FIREBASE_AUTH_URI=https://accounts.google.com/o/oauth2/auth" >> buildozer.spec.template
            echo "    FIREBASE_TOKEN_URI=https://oauth2.googleapis.com/token" >> buildozer.spec.template
            echo "    FIREBASE_AUTH_PROVIDER_CERT_URL=https://www.googleapis.com/oauth2/v1/certs" >> buildozer.spec.template
            echo "    FIREBASE_CLIENT_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-fbsvc%40podologia-app.iam.gserviceaccount.com" >> buildozer.spec.template
            echo "orientation = portrait" >> buildozer.spec.template
            echo "source.include_exts = py,png,jpg,kv,atlas,json" >> buildozer.spec.template
            echo "source.dir = ." >> buildozer.spec.template
            echo "main.py = main.py" >> buildozer.spec.template
            echo "data.dir = assets" >> buildozer.spec.template
          fi
          
          cp buildozer.spec.template buildozer.spec
          sed -i "s/__FIREBASE_PRIVATE_KEY_ID__/$FIREBASE_PRIVATE_KEY_ID/g" buildozer.spec
          sed -i "s/__FIREBASE_PRIVATE_KEY__/$FIREBASE_PRIVATE_KEY/g" buildozer.spec
          sed -i "s/__FIREBASE_CLIENT_EMAIL__/$FIREBASE_CLIENT_EMAIL/g" buildozer.spec
          sed -i "s/__FIREBASE_CLIENT_ID__/$FIREBASE_CLIENT_ID/g" buildozer.spec
          sed -i 's/\\n/\\\\n/g' buildozer.spec
        env:
          FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}

      - name: Build APK
        run: |
          echo "=== INFORMACIÃ“N DEL ENTORNO ==="
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          echo "ANDROID_NDK_ROOT: $ANDROID_NDK_ROOT"
          echo "Java version:"
          java -version
          echo "Python version:"
          python --version
          echo "Herramientas Android encontradas:"
          which aidl || echo "Aidl no encontrado"
          which aapt || echo "Aapt no encontrado"
          which zipalign || echo "Zipalign no encontrado"
          
          # Ejecutar buildozer
          buildozer -v android debug

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: kivy-apk
          path: bin/*.apk

      - name: Upload build logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            .buildozer
            buildozer.spec
